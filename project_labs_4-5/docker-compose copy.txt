services:
  postgres:
    image: postgres:16
    container_name: postgres
    hostname: postgres
    environment:
      POSTGRES_DB: university
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mirea
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./data_center/postgres.sql:/docker-entrypoint-initdb.d/init.sql # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ö–µ–º—É –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
    ports:
      - "5433:5432"
    # –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –≤–∫–ª—é—á–∞–µ—Ç –ª–æ–≥–∏—á–µ—Å–∫–æ–µ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –¥–ª—è Debezium (CDC)
    command: -c wal_level=logical
    restart: on-failure

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0 # –ò—Å–ø–æ–ª—å–∑—É–µ–º –±–æ–ª–µ–µ —Å–≤–µ–∂–∏–µ –≤–µ—Ä—Å–∏–∏
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  schema-registry:
    image: confluentinc/cp-schema-registry:7.3.0
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - kafka
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'kafka:29092'
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081

  
  # --- –û–ë–ù–û–í–õ–ï–ù–ù–´–ô –°–ï–†–í–ò–° KAFKA CONNECT ---
  connect:
    image: confluentinc/cp-kafka-connect-base:7.3.0
    hostname: connect
    container_name: connect
    depends_on:
      - kafka
      - schema-registry
    ports:
      - "8083:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: 'kafka:29092'
      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: _connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: _connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: _connect-status
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
      CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"
      CONNECT_LOG4J_ROOT_LOGLEVEL: "INFO"
      CONNECT_LOG4J_LOGGERS: "org.apache.kafka.connect.runtime.rest=WARN,org.reflections=ERROR"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "1"
    command:
      - bash
      - -c
      - |
        echo "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω–Ω–µ–∫—Ç–æ—Ä–∞ Debezium PostgreSQL..."
        confluent-hub install --no-prompt debezium/debezium-connector-postgresql:1.7.0

        echo "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω–Ω–µ–∫—Ç–æ—Ä–∞ Elasticsearch Sink..."
        confluent-hub install --no-prompt confluentinc/kafka-connect-elasticsearch:latest

        echo "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω–Ω–µ–∫—Ç–æ—Ä–∞ Redis Sink..."
        confluent-hub install --no-prompt jcustenborder/kafka-connect-redis:latest

        echo "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω–Ω–µ–∫—Ç–æ—Ä–∞ MongoDB Sink..."
        confluent-hub install --no-prompt mongodb/kafka-connect-mongodb:latest

        echo "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω–Ω–µ–∫—Ç–æ—Ä–∞ Neo4j Sink..."
        confluent-hub install --no-prompt neo4j/kafka-connect-neo4j:2.0.0

        echo "üöÄ –ó–∞–ø—É—Å–∫ Kafka Connect Worker..."
        /etc/confluent/docker/run &

        echo "‚è≥ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑–∞–ø—É—â–µ–Ω –∏ –æ–∂–∏–¥–∞–µ—Ç. –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏."
        sleep infinity

  control-center:
    image: confluentinc/cp-enterprise-control-center:7.3.0
    hostname: control-center
    container_name: control-center
    depends_on:
      - kafka
      - schema-registry
      - connect
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'kafka:29092'
      CONTROL_CENTER_CONNECT_CONNECT-DEFAULT_CLUSTER: 'connect:8083'
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 9021


  elasticsearch:
    image: elasticsearch:7.17.0
    container_name: elastic
    hostname: elasticsearch
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.security.http.ssl.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    restart: on-failure
    

  kibana:
    image: kibana:7.17.0
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_HOSTS: 'http://elasticsearch:9200'
    depends_on:
      - elasticsearch
    restart: on-failure


  redis:
    image: redis:latest
    container_name: redis
    hostname: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: on-failure

  neo4j:
    image: neo4j:latest
    container_name: neo
    hostname: neo4j
    environment:
      - NEO4J_AUTH=neo4j/mireamirea
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_data:/data
    restart: on-failure

  mongodb:
    image: mongo:latest
    container_name: mongo
    hostname: mongodb
    environment:
      - MONGO_INITDB_DATABASE=university
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=mirea
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    restart: on-failure

  data:
    build:
      context: ./data_center
    depends_on:
      - postgres
      - redis
      - mongodb
      - neo4j
      - elasticsearch
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=mirea
      - POSTGRES_DB=university
    

  api_gateway:
    build:
      context: ./api_gateway
    container_name: api_gateway
    ports:
      - "8000:8000"
    depends_on:
      - lab1 
      - lab2
      - lab3
      - data

  lab1:
    build:
      context: ./lab1
    ports:
      - "8001:8000"
    depends_on:
      - postgres
      - redis
      - neo4j
      - elasticsearch
      - data
    environment:
      - POSTGRES_HOST=postgres
      - REDIS_HOST=redis
      - NEO4J_HOST=neo4j
      - ELASTICSEARCH_HOST=elasticsearch
  lab2:
    build:
      context: ./lab2
    ports:
      - "8002:8000"
    depends_on:
      - postgres
      - neo4j
      - data
    environment:
      - POSTGRES_HOST=postgres
      - NEO4J_HOST=neo4j

  lab3:
    build:
      context: ./lab3
    ports:
      - "8003:8000"
    depends_on:
      - postgres
      - redis
      - neo4j
      - data
    environment:
      - POSTGRES_HOST=postgres
      - REDIS_HOST=redis
      - NEO4J_HOST=neo4j

volumes:
  postgres_data:
  elasticsearch_data:
  redis_data:
  neo4j_data:
  mongo_data: